// <auto-generated />
using Excercise_3_Timesheets.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Excercise_3_Timesheets.Migrations
{
    [DbContext(typeof(TimesheetsContext))]
    partial class TimesheetsContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Excercise_3_Timesheets.Models.Location", b =>
                {
                    b.Property<int>("LocationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LocationId");

                    b.ToTable("Locations");

                    b.HasData(
                        new
                        {
                            LocationId = 1,
                            Address = "20 Aldwin Close, Chilton",
                            Name = "Office 1"
                        },
                        new
                        {
                            LocationId = 2,
                            Address = "16 Atha Lane, Keswick",
                            Name = "Office 2"
                        },
                        new
                        {
                            LocationId = 3,
                            Address = "2 Deathvalley, Indiana",
                            Name = "Office 3"
                        });
                });

            modelBuilder.Entity("Excercise_3_Timesheets.Models.Staff", b =>
                {
                    b.Property<int>("StaffId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Forename")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StaffId");

                    b.ToTable("Staffs");

                    b.HasData(
                        new
                        {
                            StaffId = 1,
                            Email = "Joedinsley31@gmail.com",
                            Forename = "Joe",
                            Surname = "Dinsley"
                        },
                        new
                        {
                            StaffId = 2,
                            Email = "Stefansmith1@gmail.com",
                            Forename = "Stefan",
                            Surname = "Smith"
                        },
                        new
                        {
                            StaffId = 3,
                            Email = "Jamiequaker4808@gmail.com",
                            Forename = "Jamie",
                            Surname = "Quaker"
                        },
                        new
                        {
                            StaffId = 4,
                            Email = "Skyestevenson0@gmail.com",
                            Forename = "Skye",
                            Surname = "Stevenson"
                        },
                        new
                        {
                            StaffId = 5,
                            Email = "Davidatkinson111@gmail.com",
                            Forename = "David",
                            Surname = "Atkinson"
                        },
                        new
                        {
                            StaffId = 6,
                            Email = "Garyridley007@gmail.com",
                            Forename = "Gary",
                            Surname = "Ridley"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
